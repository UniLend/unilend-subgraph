// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get _reserve(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FlashLoan extends ethereum.Event {
  get params(): FlashLoan__Params {
    return new FlashLoan__Params(this);
  }
}

export class FlashLoan__Params {
  _event: FlashLoan;

  constructor(event: FlashLoan) {
    this._event = event;
  }

  get _target(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _reserve(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _protocolFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get param2(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RedeemUnderlying extends ethereum.Event {
  get params(): RedeemUnderlying__Params {
    return new RedeemUnderlying__Params(this);
  }
}

export class RedeemUnderlying__Params {
  _event: RedeemUnderlying;

  constructor(event: RedeemUnderlying) {
    this._event = event;
  }

  get _reserve(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Core__getFlashLoanFeesInBipsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Core extends ethereum.SmartContract {
  static bind(address: Address): Core {
    return new Core("Core", address);
  }

  Assets(param0: Address): Address {
    let result = super.call("Assets", "Assets(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_Assets(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("Assets", "Assets(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  Pools(param0: Address): Address {
    let result = super.call("Pools", "Pools(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_Pools(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("Pools", "Pools(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOfUnderlying(
    _reserve: Address,
    _address: Address,
    timestamp: BigInt
  ): BigInt {
    let result = super.call(
      "balanceOfUnderlying",
      "balanceOfUnderlying(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOfUnderlying(
    _reserve: Address,
    _address: Address,
    timestamp: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfUnderlying",
      "balanceOfUnderlying(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createDonationContract(): Address {
    let result = super.call(
      "createDonationContract",
      "createDonationContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_createDonationContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createDonationContract",
      "createDonationContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createPool(_reserve: Address): Address {
    let result = super.call("createPool", "createPool(address):(address)", [
      ethereum.Value.fromAddress(_reserve)
    ]);

    return result[0].toAddress();
  }

  try_createPool(_reserve: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("createPool", "createPool(address):(address)", [
      ethereum.Value.fromAddress(_reserve)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  distributorAddress(): Address {
    let result = super.call(
      "distributorAddress",
      "distributorAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_distributorAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributorAddress",
      "distributorAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  donationAddress(): Address {
    let result = super.call(
      "donationAddress",
      "donationAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_donationAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "donationAddress",
      "donationAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFlashLoanFeesInBips(): Core__getFlashLoanFeesInBipsResult {
    let result = super.call(
      "getFlashLoanFeesInBips",
      "getFlashLoanFeesInBips():(uint256,uint256)",
      []
    );

    return new Core__getFlashLoanFeesInBipsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getFlashLoanFeesInBips(): ethereum.CallResult<
    Core__getFlashLoanFeesInBipsResult
  > {
    let result = super.tryCall(
      "getFlashLoanFeesInBips",
      "getFlashLoanFeesInBips():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Core__getFlashLoanFeesInBipsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getPools(_reserves: Array<Address>): Array<Address> {
    let result = super.call("getPools", "getPools(address[]):(address[])", [
      ethereum.Value.fromAddressArray(_reserves)
    ]);

    return result[0].toAddressArray();
  }

  try_getPools(_reserves: Array<Address>): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getPools", "getPools(address[]):(address[])", [
      ethereum.Value.fromAddressArray(_reserves)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  poolBalanceOfUnderlying(_reserve: Address, timestamp: BigInt): BigInt {
    let result = super.call(
      "poolBalanceOfUnderlying",
      "poolBalanceOfUnderlying(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );

    return result[0].toBigInt();
  }

  try_poolBalanceOfUnderlying(
    _reserve: Address,
    timestamp: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolBalanceOfUnderlying",
      "poolBalanceOfUnderlying(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromUnsignedBigInt(timestamp)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolLength(): BigInt {
    let result = super.call("poolLength", "poolLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_poolLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolLength", "poolLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeem(_reserve: Address, _amount: BigInt): BigInt {
    let result = super.call("redeem", "redeem(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(_reserve),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_redeem(_reserve: Address, _amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("redeem", "redeem(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(_reserve),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeemUnderlying(_reserve: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "redeemUnderlying",
      "redeemUnderlying(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_redeemUnderlying(
    _reserve: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redeemUnderlying",
      "redeemUnderlying(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_reserve),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  setFlashLoanFeesInBips(
    _newFeeTotal: BigInt,
    _newFeeProtocol: BigInt
  ): boolean {
    let result = super.call(
      "setFlashLoanFeesInBips",
      "setFlashLoanFeesInBips(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_newFeeTotal),
        ethereum.Value.fromUnsignedBigInt(_newFeeProtocol)
      ]
    );

    return result[0].toBoolean();
  }

  try_setFlashLoanFeesInBips(
    _newFeeTotal: BigInt,
    _newFeeProtocol: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setFlashLoanFeesInBips",
      "setFlashLoanFeesInBips(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_newFeeTotal),
        ethereum.Value.fromUnsignedBigInt(_newFeeProtocol)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateDonationContractCall extends ethereum.Call {
  get inputs(): CreateDonationContractCall__Inputs {
    return new CreateDonationContractCall__Inputs(this);
  }

  get outputs(): CreateDonationContractCall__Outputs {
    return new CreateDonationContractCall__Outputs(this);
  }
}

export class CreateDonationContractCall__Inputs {
  _call: CreateDonationContractCall;

  constructor(call: CreateDonationContractCall) {
    this._call = call;
  }
}

export class CreateDonationContractCall__Outputs {
  _call: CreateDonationContractCall;

  constructor(call: CreateDonationContractCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get _reserve(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _reserve(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get mintedTokens(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FlashLoanCall extends ethereum.Call {
  get inputs(): FlashLoanCall__Inputs {
    return new FlashLoanCall__Inputs(this);
  }

  get outputs(): FlashLoanCall__Outputs {
    return new FlashLoanCall__Outputs(this);
  }
}

export class FlashLoanCall__Inputs {
  _call: FlashLoanCall;

  constructor(call: FlashLoanCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reserve(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _params(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class FlashLoanCall__Outputs {
  _call: FlashLoanCall;

  constructor(call: FlashLoanCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _reserve(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get redeemTokens(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RedeemUnderlyingCall extends ethereum.Call {
  get inputs(): RedeemUnderlyingCall__Inputs {
    return new RedeemUnderlyingCall__Inputs(this);
  }

  get outputs(): RedeemUnderlyingCall__Outputs {
    return new RedeemUnderlyingCall__Outputs(this);
  }
}

export class RedeemUnderlyingCall__Inputs {
  _call: RedeemUnderlyingCall;

  constructor(call: RedeemUnderlyingCall) {
    this._call = call;
  }

  get _reserve(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RedeemUnderlyingCall__Outputs {
  _call: RedeemUnderlyingCall;

  constructor(call: RedeemUnderlyingCall) {
    this._call = call;
  }

  get token_amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetDistributorAddressCall extends ethereum.Call {
  get inputs(): SetDistributorAddressCall__Inputs {
    return new SetDistributorAddressCall__Inputs(this);
  }

  get outputs(): SetDistributorAddressCall__Outputs {
    return new SetDistributorAddressCall__Outputs(this);
  }
}

export class SetDistributorAddressCall__Inputs {
  _call: SetDistributorAddressCall;

  constructor(call: SetDistributorAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDistributorAddressCall__Outputs {
  _call: SetDistributorAddressCall;

  constructor(call: SetDistributorAddressCall) {
    this._call = call;
  }
}

export class SetDonationCoreAddressCall extends ethereum.Call {
  get inputs(): SetDonationCoreAddressCall__Inputs {
    return new SetDonationCoreAddressCall__Inputs(this);
  }

  get outputs(): SetDonationCoreAddressCall__Outputs {
    return new SetDonationCoreAddressCall__Outputs(this);
  }
}

export class SetDonationCoreAddressCall__Inputs {
  _call: SetDonationCoreAddressCall;

  constructor(call: SetDonationCoreAddressCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDonationCoreAddressCall__Outputs {
  _call: SetDonationCoreAddressCall;

  constructor(call: SetDonationCoreAddressCall) {
    this._call = call;
  }
}

export class SetDonationDisableNewCoreCall extends ethereum.Call {
  get inputs(): SetDonationDisableNewCoreCall__Inputs {
    return new SetDonationDisableNewCoreCall__Inputs(this);
  }

  get outputs(): SetDonationDisableNewCoreCall__Outputs {
    return new SetDonationDisableNewCoreCall__Outputs(this);
  }
}

export class SetDonationDisableNewCoreCall__Inputs {
  _call: SetDonationDisableNewCoreCall;

  constructor(call: SetDonationDisableNewCoreCall) {
    this._call = call;
  }
}

export class SetDonationDisableNewCoreCall__Outputs {
  _call: SetDonationDisableNewCoreCall;

  constructor(call: SetDonationDisableNewCoreCall) {
    this._call = call;
  }
}

export class SetDonationReleaseRateCall extends ethereum.Call {
  get inputs(): SetDonationReleaseRateCall__Inputs {
    return new SetDonationReleaseRateCall__Inputs(this);
  }

  get outputs(): SetDonationReleaseRateCall__Outputs {
    return new SetDonationReleaseRateCall__Outputs(this);
  }
}

export class SetDonationReleaseRateCall__Inputs {
  _call: SetDonationReleaseRateCall;

  constructor(call: SetDonationReleaseRateCall) {
    this._call = call;
  }

  get _reserve(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDonationReleaseRateCall__Outputs {
  _call: SetDonationReleaseRateCall;

  constructor(call: SetDonationReleaseRateCall) {
    this._call = call;
  }
}

export class SetFlashLoanFeesInBipsCall extends ethereum.Call {
  get inputs(): SetFlashLoanFeesInBipsCall__Inputs {
    return new SetFlashLoanFeesInBipsCall__Inputs(this);
  }

  get outputs(): SetFlashLoanFeesInBipsCall__Outputs {
    return new SetFlashLoanFeesInBipsCall__Outputs(this);
  }
}

export class SetFlashLoanFeesInBipsCall__Inputs {
  _call: SetFlashLoanFeesInBipsCall;

  constructor(call: SetFlashLoanFeesInBipsCall) {
    this._call = call;
  }

  get _newFeeTotal(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newFeeProtocol(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetFlashLoanFeesInBipsCall__Outputs {
  _call: SetFlashLoanFeesInBipsCall;

  constructor(call: SetFlashLoanFeesInBipsCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
